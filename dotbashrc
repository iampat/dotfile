# Sets history settings.
# Does not record the same command twice and ignore spaces.
export HISTCONTROL=ignoreboth
# Increases history size.
export HISTSIZE=100000
export HISTFILESIZE=1000000
# Does nott save 1- or 2-letter commands, or space-started commands, or duplicates.
export HISTIGNORE='?:??: *:&'
# Saves a timestamp with the history.
export HISTTIMEFORMAT="%Y-%m-%d %T  "
# Appends to the history file, don't overwrite it.
shopt -s histappend
# After every command, flush the writable history to the file.
export PROMPT_COMMAND='history -a'

#
# Basic Unix command aliases
#
alias ls='ls -F'
alias la='ls -aF'
alias ll='ls -lh'
alias l='ls -lFh'

alias grep='grep --color=auto'

# Git 
# gets current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "[${BRANCH}${STAT}]"
    else
        echo ""
    fi
}

# gets current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

# PATH
export PATH="/usr/local/opt/gettext/bin:$PATH"
export HADOOP_HOME="/user/ali/bin/hadoop"
export SPARK_HOME="/user/ali/bin/spark"
# export SCALA_HOME=<Path/To/Software>
export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_191.jdk/Contents/Home/"
# export GRADLE_HOME=<Path/To/Software>
export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin
export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
# export PATH=$PATH:$SCALA_HOME/bin



# Prompt
export PS1="\$(date +%Y-%m-%d):\t \$PWD/\[\e[42m\]\`parse_git_branch\`\[\e[m\]\n\$ "